{"ast":null,"code":"var _jsxFileName = \"/Users/felipequintero/git/Tech-Challenges/code-assessments/swe-foam-challenge/client/src/components/ImagesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport FoamImageList from \"./FoamImageList\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImagesList = props => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [nextImageSet, setNextImageSet] = useState(\"\");\n  const [foam, setFoam] = useState(false);\n  const [foamImages, setFoamImages] = useState([]);\n  const [itemOffset, setItemOffset] = useState(0);\n  const imagesPerPage = 8;\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/`).then(response => {\n      setImages(response.data);\n      setNextImageSet(response.data[response.data.length - 1]);\n      console.log(response.data);\n    });\n  }, []);\n\n  const handleLoadMoreButton = async e => {\n    e.preventDefault();\n    const newOffset = itemOffset + imagesPerPage;\n    console.log(`User has requested image set ${itemOffset}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  const handlePreviousImageSetButton = async e => {\n    e.preventDefault();\n    const newOffset = itemOffset - imagesPerPage;\n    console.log(`User has requested previous image set ${itemOffset}, which is offset -${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  const handleFoam = image => {\n    if (image.category === \"uncategorized\") {\n      image.category = \"foam\";\n      image.foam = 1;\n    } else if (image.category === \"foam\") {\n      image.category = \"no-foam\";\n      image.foam = 0;\n    } else {\n      image.category = \"foam\";\n    }\n\n    axios.put(`${process.env.REACT_APP_API_URL}/${image.id}`, image).then(response => {\n      console.log(response.data);\n      console.log(\"Image category updatged!\", image.category);\n      setFoam(!foam);\n    });\n  };\n\n  const handleFoamButton = async e => {\n    if (foamImages.length > 0) {\n      foamImages.filter(image => image.category === \"uncategorized\").map(image => {\n        return image.category = \"foam\";\n      });\n      setFoam(false);\n    } else {\n      foamImages.map(image => {\n        return image.category = \"no-foam\";\n      });\n      setFoam(true);\n    }\n\n    setFoam(!foam);\n  };\n\n  const currentImageDisplay = images.slice(itemOffset, itemOffset + imagesPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-load-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"load-previous\",\n        children: itemOffset > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousImageSetButton,\n          children: \"<< Load Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"load-more\",\n        children: nextImageSet && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoadMoreButton,\n          children: [\" \", \"Load Next >>\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"foam\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"foam-button\",\n          onClick: handleFoamButton,\n          children: \"Highlight Foam Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: foam && /*#__PURE__*/_jsxDEV(FoamImageList, {\n            handleFoam: handleFoam,\n            images: images\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"image-grid\",\n          children: currentImageDisplay.map(image => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                width: \"250\",\n                src: image.url,\n                alt: \"possible foam images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Category: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: image.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Location: \", /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: image.lastModified\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"ID: \", image.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"foam-status-button\",\n                id: image.id,\n                name: \"foam\",\n                value: image,\n                onClick: () => handleFoam(image),\n                children: [\"Toggle Foam Tag \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)]\n            }, image.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImagesList, \"wpDhl0t0oQFnZnbw84h5saMUKwI=\");\n\n_c = ImagesList;\nexport default ImagesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesList\");","map":{"version":3,"sources":["/Users/felipequintero/git/Tech-Challenges/code-assessments/swe-foam-challenge/client/src/components/ImagesList.js"],"names":["React","useEffect","useState","Card","Container","FoamImageList","axios","ImagesList","props","images","setImages","nextImageSet","setNextImageSet","foam","setFoam","foamImages","setFoamImages","itemOffset","setItemOffset","imagesPerPage","get","process","env","REACT_APP_API_URL","then","response","data","length","console","log","handleLoadMoreButton","e","preventDefault","newOffset","handlePreviousImageSetButton","handleFoam","image","category","put","id","handleFoamButton","filter","map","currentImageDisplay","slice","url","lastModified"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport FoamImageList from \"./FoamImageList\";\nimport axios from \"axios\";\n\nconst ImagesList = (props) => {\n  const [images, setImages] = useState([]);\n  const [nextImageSet, setNextImageSet] = useState(\"\");\n  const [foam, setFoam] = useState(false);\n  const [foamImages, setFoamImages] = useState([]);\n  const [itemOffset, setItemOffset] = useState(0);\n  const imagesPerPage = 8;\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/`).then((response) => {\n      setImages(response.data);\n      setNextImageSet(response.data[response.data.length - 1]);\n      console.log(response.data);\n    });\n  }, []);\n\n  const handleLoadMoreButton = async (e) => {\n    e.preventDefault();\n\n    const newOffset = itemOffset + imagesPerPage;\n\n    console.log(\n      `User has requested image set ${itemOffset}, which is offset ${newOffset}`\n    );\n    setItemOffset(newOffset);\n  };\n\n  const handlePreviousImageSetButton = async (e) => {\n    e.preventDefault();\n\n    const newOffset = itemOffset - imagesPerPage;\n\n    console.log(\n      `User has requested previous image set ${itemOffset}, which is offset -${newOffset}`\n    );\n    setItemOffset(newOffset);\n  };\n\n  const handleFoam = (image) => {\n    if (image.category === \"uncategorized\") {\n      image.category = \"foam\";\n      image.foam = 1;\n    } else if (image.category === \"foam\") {\n      image.category = \"no-foam\";\n      image.foam = 0;\n    } else {\n      image.category = \"foam\";\n    }\n\n    axios\n      .put(`${process.env.REACT_APP_API_URL}/${image.id}`, image)\n      .then((response) => {\n        console.log(response.data);\n        console.log(\"Image category updatged!\", image.category);\n        setFoam(!foam);\n      });\n  };\n\n  const handleFoamButton = async (e) => {\n    if (foamImages.length > 0) {\n      foamImages\n        .filter((image) => image.category === \"uncategorized\")\n        .map((image) => {\n          return (image.category = \"foam\");\n        });\n      setFoam(false);\n    } else {\n      foamImages.map((image) => {\n        return (image.category = \"no-foam\");\n      });\n      setFoam(true);\n    }\n    setFoam(!foam);\n  };\n\n  const currentImageDisplay = images.slice(\n    itemOffset,\n    itemOffset + imagesPerPage\n  );\n\n  return (\n    <>\n      <div className=\"image-load-nav\">\n        <span className=\"load-previous\">\n          {itemOffset > 0 && (\n            <button onClick={handlePreviousImageSetButton}>\n              {\"<< Load Previous\"}\n            </button>\n          )}\n        </span>\n        <span className=\"load-more\">\n          {nextImageSet && (\n            <button onClick={handleLoadMoreButton}> {\"Load Next >>\"} </button>\n          )}\n        </span>\n        <span className=\"foam\">\n          <button className=\"foam-button\" onClick={handleFoamButton}>\n            {\"Highlight Foam Images\"}\n          </button>\n        </span>\n      </div>\n      <Container>\n        <Card>\n          <Card.Body>\n            {foam && <FoamImageList handleFoam={handleFoam} images={images} />}\n          </Card.Body>\n        </Card>\n      </Container>\n      <Container>\n        <Card>\n          <Card.Body className=\"image-grid\">\n            {currentImageDisplay.map((image) => {\n              return (\n                <div key={image.id}>\n                  <img width=\"250\" src={image.url} alt=\"possible foam images\" />\n                  <div>\n                    Category: <strong>{image.category}</strong>\n                  </div>\n                  <br />\n                  <div>\n                    Location: <em>{image.lastModified}</em>\n                  </div>\n                  <br />\n                  <div>ID: {image.id}</div>\n                  <br />\n                  <button\n                    className=\"foam-status-button\"\n                    id={image.id}\n                    name=\"foam\"\n                    value={image}\n                    onClick={() => handleFoam(image)}\n                  >\n                    Toggle Foam Tag <br />\n                  </button>\n                  <br />\n                </div>\n              );\n            })}\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default ImagesList;\n"]},"metadata":{},"sourceType":"module"}